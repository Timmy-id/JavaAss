package timeapp;
import java.util.Scanner;

public class TimeApp {

    /**
     *
     * @param args
     */
    public static void main(String[] args) {

    Scanner input = new Scanner(System.in);

    System.out.println("Enter time1 (hour minute second): ");

    int hour = input.nextInt();
    int minute = input.nextInt();
    int second = input.nextInt();

    Time time1 = new Time(hour, minute, second);

    System.out.println(time1.toString());
    System.out.println("Elapsed seconds in time1: " + time1.getSeconds());
    System.out.println("\nEnter time2 (elapsed time): ");

    int time = 1000 * input.nextInt();

    Time time2 = new Time(time);

    System.out.println(time2.toString());
    System.out.println("Elapsed seconds in time2: " + time2.getSeconds());
    System.out.println("\ntime1.compareTo(time2)? " + time1.compareTo(time2));

    Time time3 = time1.clone();

    System.out.println("\ntime3 is created as a clone of time1");
    System.out.println("time1.compareTo(time3)? " + time1.compareTo(time3));
  }
}

class Time implements Comparable<Time>, Cloneable{

  long totalMilliSeconds = System.currentTimeMillis();

  public Time() {
  
  };

  public Time(int hour, int minute, int second) {
    totalMilliSeconds = (hour * 60 * 60 * 1000) + (minute * 60 * 1000) + (second * 1000);
    this.totalMilliSeconds = totalMilliSeconds;
  }

  public Time(long time) {
    this.totalMilliSeconds = time;
  }

  @Override
  public Time clone() {
    try {
      return (Time) super.clone();
    } catch (CloneNotSupportedException e) {
      e.printStackTrace();
      throw new RuntimeException();
    }
  }

  public int getHour() {
    return (int) (totalMilliSeconds / (1000 * 60 * 60)) % 24;
  }

  public int getMinute() {
    return (int) totalMilliSeconds / 1000 / 60 % 60;
  }

  public int getSecond() {
    return (int) totalMilliSeconds / 1000 % 60;
  }

  public int getSeconds() {
    return (int) totalMilliSeconds / 1000;
  }

  @Override
  public String toString() {
    return (getHour() + " hours " + getMinute() + " minutes " + getSecond() + (" seconds"));
  }

  @Override
  public int compareTo(Time time) {
    return (getSeconds() - time.getSeconds());
  }
}
